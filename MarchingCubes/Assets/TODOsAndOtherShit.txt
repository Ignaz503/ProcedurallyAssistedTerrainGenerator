
start up function
	Surface Gen is not a monobehaviour
	

Rework the default mapping for nodes
	- fixed issue of saving and loading for mapping
	- fixed node layout display on the actual layout style asset
	- added lables to the drawn node

	
SANETIZE GRAPH NAME	
	
heightmap generating insteas of cubemarch	
UV mapping 
compute shaders
water erosion
	for heightmap
	maybe expand volumetric for cube march? eg add to sample points and so on a lot more difficult
	
texture painting
blender exec for detail work or tools that allow you to do that in unity
	might fix the UV mapping problem as well -> let blender do it^^

TODO Blender:
	Write Python script that is loaded on startup -> opens a TCP client
	write to server okay to recieve data
	On Msg recieved get all files in folder with fbx ending
	open files in scene
	-> button done editing -> send to server msg DONE
	-> close connection

	c# unity part
	-> export FBX(done)
	open TCP server
	execute/ start process blender
	on msg revieved OKAY  send workspace path
	do noting until done
	on done revieved
	close server
	-> reload fbx files as new meshes onto old terrain 

Above was a good start, however issues occure wihtt recompile and having to stop the server thread and so on... rouge TCP threads
new solution that will be implemented after i get the python script to work

The Process ID storing might be unnecessary -> just try to connect to that port -> if success server running if fail no server running 

TCP Command Relay server
	own process (started by unity) to close it at the same time as untiy store process ID in some asset(not lost during recompile)
	Has tcp server
		2 client connection types: blender client
								   unity client
		every client gets ID.

		Initial Handshake:
				1. msg 1: Hi here is client type pls give me ID
				2. Thx for ID: pls gibe me ID of other client type that i can communicate with
	     further msgs: pls relay this data to the client of {ID previously recieved}
		    -> send error client non existance when other client disconnects

		Further Message: Pls inform me in case of other type connected
			-> send to client: Hey bitch you got company

		Unity Closed MSG:
			inform all bleneder connections that the party is over and close their connections
			stop server
			close process

		Client Client msgs:
			Initial Hi can i send data/ yes i want your data
			-> send path to FBX files pls open these
			-> okay, pls send info like chunk size, chunk count
			-> pls send info location of chunk in your world so that i don't have to put all of them at the origin
			-> hey i'm done you can reload
			
Unity Side:
		first:
			on start communication, or in settings
				ask the user to give the path to the blender executable
				ask user if it is okay to copy .py file into his blender start up
				-> if yes go to version startup folder -> copy file into folder (overwrite no/ ask user)
		second:
			check if server already running?
				if yes skip next part and go to third
			next part because  i don't want to have the exe on my git or in assetpack
			check if TCP relay exe exists
				-> if no open cmd line and compile file to exe and execute
				-> if yes execute this file#
			after execute store process id in asset(on recopile you create new instance of the BlenderUnityCommuicator and you would lose the proces
			meaning you have to close it manually after the fact)
		third:
			execute blender
			start client connection to relay server
			ask for blender client
			-> if error ask for notification of blender client connect
			start communication with client

		On Unity Recompile: //??? maybe not needed (i don' think it is see sentence above TCP Command Relay Server )
			Get the relay server process by ID -> if no porcess don't worry
		On Unity Close:
			if TCP server running -> send unity closed msg

Blender Side:
	On start try connect to tcp relay server -> if fail don't worry( maybe normal blender start and not with unity)
	-> on fail no fancy ui additions or anything
	done button etc
	on blender close -> send goodby to server(with id of unity client you worked with if existend)
	-> maybe server informs other client( eg client error handling if never got done from blender )
		
		